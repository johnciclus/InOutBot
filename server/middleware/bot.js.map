{"version":3,"file":"bot.js","sourceRoot":"","sources":["bot.ts"],"names":[],"mappings":";;;IAoCA,gCAAuC,GAAG,EAAE,GAAG,EAAE,GAAG;QAClD,IAAI,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAE/C,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAGf,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAIhC,IAAI,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC;iBACrD,MAAM,CAAC,GAAG,CAAC;iBACX,MAAM,CAAC,KAAK,CAAC,CAAC;YAEjB,EAAE,CAAC,CAAC,aAAa,IAAI,YAAY,CAAC,CAAC,CAAC;gBAClC,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC;IACH,CAAC;;IAED,qBAA4B,GAAG,EAAE,GAAG;QAClC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,WAAW,IAAI,GAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,gBAAgB,CAAC,CAAC,CAAC;YAChG,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;QACnD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;YAC3E,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;IAEH,CAAC;;IAED,gBAAuB,GAAG,EAAE,GAAG;QAC7B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QAGpB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YAG1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,SAAS;gBACpC,IAAI,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC;gBAC1B,IAAI,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC;gBAGjC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,cAAc;oBAElD,EAAE,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBACzB,sBAAsB,CAAC,cAAc,CAAC,CAAC;oBACzC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,eAAe,CAAC,cAAc,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnC,4BAA4B,CAAC,cAAc,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnC,gBAAgB,CAAC,cAAc,CAAC,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC/B,mBAAmB,CAAC,cAAc,CAAC,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC1C,mBAAmB,CAAC,cAAc,CAAC,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,2CAA2C,EAAE,cAAc,CAAC,CAAC;oBAC3E,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAMH,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;;IAED,mBAA0B,GAAG,EAAE,GAAG;QAChC,IAAI,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC7D,IAAI,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAI5C,IAAI,QAAQ,GAAG,YAAY,CAAC;QAG5B,IAAI,kBAAkB,GAAG,WAAW,GAAG,sBAAsB,GAAG,QAAQ,CAAC;QAEzE,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE;YACtB,mBAAmB,EAAE,mBAAmB;YACxC,WAAW,EAAE,WAAW;YACxB,kBAAkB,EAAE,kBAAkB;SACvC,CAAC,CAAC;IACL,CAAC;;IAED,uBAA8B,WAAW,EAAE,QAAQ,EAAE,KAAK;QACxD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAE7B,IAAI,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAExC,EAAE,CAAA,CAAC,MAAM,CAAC,CAAA,CAAC;YACT,MAAM,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;;IAMD,sBAA6B,WAAW,EAAE,QAAQ;QAGhD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,aAAa,EAAE,WAAW;SAC3B,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;;IAMD,uBAA8B,WAAW,EAAE,QAAQ;QAGjD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,aAAa,EAAE,YAAY;SAC5B,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;;IAMD,yBAAgC,WAAW,EAAE,QAAQ,EAAG,WAAW;QACjE,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,WAAW;aAElB;SACF,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;;IAMD,4BAAmC,WAAW,EAAE,QAAQ,EAAE,QAAQ;QAChE,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,aAAa,EAAE,SAAS;wBACxB,QAAQ,EAAE,QAAQ;qBACnB;iBACF;aACF;SACF,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;;IAED,uBAA8B,WAAW;QACvC,IAAI,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QACzC,EAAE,CAAA,CAAC,OAAO,YAAY,IAAI,WAAW,CAAC,CAAA,CAAC;YACrC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QAC7B,CAAC;IACH,CAAC;;IAcD,gCAAgC,KAAK;QACnC,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;QACrC,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC;QAQjC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QACpC,IAAI,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QAEvC,OAAO,CAAC,GAAG,CAAC,4DAA4D;YACtE,0BAA0B,EAAE,QAAQ,EAAE,WAAW,EAAE,gBAAgB,EACnE,UAAU,CAAC,CAAC;QAId,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,2BAA2B,CAAC,CAAC;IACtE,CAAC;IAgBD,yBAAyB,KAAK;QAC5B,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;QACrC,IAAI,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC;QACpC,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAK5B,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;QAC7B,IAAI,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC;QAC5B,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAGhC,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;QAC/B,IAAI,kBAAkB,GAAG,OAAO,CAAC,WAAW,CAAC;QAC7C,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC;QAErC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEpC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAEX,OAAO,CAAC,GAAG,CAAC,0DAA0D,EACpE,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC9B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,iBAAiB,GAAG,UAAU,CAAC,OAAO,CAAC;YAE3C,IAAI,eAAe,SAAA,CAAC;YAEpB,EAAE,CAAA,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;gBAClC,IAAI,MAAM,GAAG,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1C,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAG9C,EAAE,CAAA,CAAC,OAAO,eAAe,IAAI,UAAU,CAAC,CAAA,CAAC;oBACvC,EAAE,CAAA,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;wBACtB,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,CAAC;oBACD,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC3B,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/D,CAAC;oBACD,IAAI,CAAA,CAAC;wBACH,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpD,CAAC;gBACH,CAAC;YACH,CAAC;YAAA,IAAI,CAAA,CAAC;gBACJ,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;gBAErD,EAAE,CAAA,CAAC,eAAe,CAAC,CAAA,CAAC;oBAClB,eAAe,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,WAAS,GAAG,KAAK,CAAC;YACtB,IAAI,cAAY,GAAG,SAAS,CAAC;YAE7B,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAA;YAEvC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,GAAG;gBAC/B,EAAE,CAAA,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;oBAC5B,cAAY,GAAI,IAAI,CAAC;oBACrB,WAAS,GAAG,IAAI,CAAC;gBACnB,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,EAAE,CAAA,CAAC,WAAS,CAAC,CAAA,CAAC;gBACZ,cAAY,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;YACtC,CAAC;YAAA,IAAI,CAAA,CAAC;gBACJ,EAAE,CAAA,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAA,CAAC;oBAC5B,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC;wBACpB,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAA;oBACvB,CAAC;oBACD,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBACtC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAEvB,OAAM,GAAG,EAAC,CAAC;wBACT,EAAE,CAAA,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,CAAA,CAAC;4BACpC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;4BACpC,aAAa,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;4BACnD,WAAS,GAAG,IAAI,CAAC;wBACnB,CAAC;wBACD,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;wBAC1B,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBACrB,CAAC;gBACH,CAAC;gBACD,IAAI,CAAA,CAAC;oBACH,aAAa,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;gBACpD,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAA,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,CAAA,CAAC;gBAC3C,IAAI,UAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC;gBACzD,IAAI,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAGvC,EAAE,CAAA,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAA,CAAC;oBAC5B,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC;wBACpB,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAA;oBACvB,CAAC;oBACD,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBACtC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBAEvB,OAAM,GAAG,EAAC,CAAC;wBAET,EAAE,CAAA,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,YAAY,CAAC,CAAA,CAAC;4BAC1C,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,EAAC,GAAG,EAAE,UAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,UAAQ,CAAC,IAAI,EAAC,CAAC;4BAChE,aAAa,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;wBACrD,CAAC;wBACD,OAAO,aAAa,CAAC,GAAG,CAAC,CAAA;wBACzB,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;oBACrB,CAAC;gBACH,CAAC;YACH,CAAC;QAEH,CAAC;IAEH,CAAC;IASD,sCAAsC,KAAK;QACzC,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;QACrC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC/B,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACnC,IAAI,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC;QAElC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEpC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,UAAU,CAAC,OAAO,CAAC,UAAS,SAAS;YAErC,CAAC,CAAC,CAAC;QACL,CAAC;IAGH,CAAC;IASD,0BAA0B,KAAK;QAC7B,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;QACrC,IAAI,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC;QAIrC,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC;QAOrC,IAAI,eAAe,CAAC;QAEpB,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEhC,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QAKpC,EAAE,CAAA,CAAC,eAAe,CAAC,CAAA,CAAC;YAClB,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,CAAC;gBACrB,KAAK,CAAC;oBACJ,eAAe,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;oBACvC,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClD,KAAK,CAAC;gBACR,KAAK,CAAC;oBACJ,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7D,KAAK,CAAC;gBACR;oBACE,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAC,MAAM,CAAC,CAAA;YAC7C,CAAC;QACH,CAAC;IA8BH,CAAC;IASD,6BAA6B,KAAK;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;QAGrC,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;QACrC,IAAI,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;QAEpC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAC,4DAA4D;YACtE,WAAW,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;IAC5C,CAAC;IAUD,6BAA6B,KAAK;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;QAErC,IAAI,MAAM,GAAG,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC;QAC1C,IAAI,QAAQ,GAAG,KAAK,CAAC,eAAe,CAAC,kBAAkB,CAAC;QAExD,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAC,8DAA8D;YACxE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAOD,qBAAqB,WAAW,EAAE,QAAQ;QACtC,EAAE,CAAA,CAAC,OAAO,iBAAiB,IAAI,WAAW,CAAC,CAAA,CAAC;YAC1C,MAAM,CAAC,EAAE,CAAC;gBACR,GAAG,EAAE,cAAc,GAAG,aAAa;gBACnC,EAAE,EAAE,EAAC,YAAY,EAAE,iBAAiB,EAAC;gBACrC,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,WAAW;aAClB,CAAC,CAAC,OAAK,CAAA,CAAC,UAAA,KAAK;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,QAAQ,CAAC,CAAA;YACrD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,iBAAiB,QAAQ;QACrB,MAAM,CAAC,EAAE,CAAC;YACR,GAAG,EAAE,cAAc,GAAG,8DAA8D;YACpF,EAAE,EAAE,EAAC,YAAY,EAAE,iBAAiB,EAAC;YACrC,MAAM,EAAE,KAAK;SACd,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;YACd,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;YAC9D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,OAAK,CAAA,CAAC,UAAA,KAAK;YACZ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAMD,0BAAiC,WAAW,EAAE,QAAQ,EAAE,QAAQ;QAC9D,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE;wBACP,GAAG,EAAE,QAAQ;qBACd;iBACF;aACF;SACF,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;;IAMD,wBAAwB,WAAW,EAAE,QAAQ,EAAE,MAAM;QACnD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE;wBACP,GAAG,EAAE,UAAU,GAAG,MAAM;qBACzB;iBACF;aACF;SACF,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAMD,0BAA0B,WAAW,EAAE,QAAQ,EAAE,QAAQ;QACvD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE;wBACP,GAAG,EAAE,UAAU,GAAG,QAAQ;qBAC3B;iBACF;aACF;SACF,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAMD,0BAA0B,WAAW,EAAE,QAAQ,EAAE,QAAQ;QACvD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE;wBACP,GAAG,EAAE,UAAU,GAAG,QAAQ;qBAC3B;iBACF;aACF;SACF,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAMD,yBAAyB,WAAW,EAAE,QAAQ,EAAE,OAAO;QACrD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,MAAM;oBACZ,OAAO,EAAE;wBACP,GAAG,EAAE,UAAU,GAAG,OAAO;qBAC1B;iBACF;aACF;SACF,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAMD,2BAA2B,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO;QAC7D,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,aAAa,EAAE,QAAQ;wBACvB,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,OAAO;qBACjB;iBACF;aACF;SACF,CAAC;QAmBF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAMD,4BAAmC,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa;QAE9E,IAAI,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,IAAI,CAAC,CAAC;QAEzD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAC;gBACN,UAAU,EAAE;oBACV,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,OAAO;iBACjB;gBACD,aAAa,EAAE,aAAa;aAC7B;SACF,CAAC;QAgDF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;;IAMD,+BAAsC,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE,aAAa;QAC9E,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,IAAI,EAAE,IAAI;gBAEV,aAAa,EAAE,aAAa;aAC7B;SACF,CAAC;QAwBF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;;IAMD,yBAAyB,WAAW,EAAE,QAAQ;QAC5C,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAE9D,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,aAAa,EAAE,WAAW;SAC3B,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAMD,4BAA4B,WAAW,EAAE,QAAQ,EAAE,OAAO;QACxD,IAAI,WAAW,GAAG;YAChB,SAAS,EAAE;gBACT,EAAE,EAAE,WAAW;aAChB;YACD,OAAO,EAAE;gBACP,UAAU,EAAE;oBACV,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,OAAO;iBACjB;aACF;SACF,CAAC;QAeF,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED,2BAA2B,GAAG,EAAE,GAAG;QACjC,GAAG,CAAC,CAAqB,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;YAAnB,IAAA,cAAY,EAAX,WAAG,EAAE,aAAK;YAClB,EAAE,CAAA,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACrB,MAAM,CAAC,KAAK,CAAC;SAChB;QACD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,qBAA4B,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ;QAC7D,EAAE,CAAA,CAAC,OAAO,QAAQ,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,CAAA,CAAC;YAC9C,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QAC7B,CAAC;QAED,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,GAAG,EAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;IACnE,CAAC;;IAED,qBAAqB,WAAW,EAAE,MAAM;QACtC,EAAE,CAAA,CAAC,OAAO,QAAQ,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,CAAA,CAAC;YAC9C,MAAM,CAAC,SAAS,CAAA;QAClB,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,wBAAwB,WAAW,EAAE,MAAM;QACzC,EAAE,CAAA,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAA,CAAC;YACzB,MAAM,CAAC,KAAK,CAAA;QACd,CAAC;QAED,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,IAAI,CAAA;IAEb,CAAC;IAED,uBAA8B,WAAW,EAAE,GAAG,EAAE,KAAK;QACnD,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAA,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAA;QAC1B,CAAC;QACD,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACnC,CAAC;;;;;;;;;;;;;;;;;;;;;;YAh6BK,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAEtC,gBAAgB,GAAG,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAElD,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAEtC,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAE9C,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YAE1D,mBAAa,KAAK,GAAG,CAAC,EAAC;YAEvB,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,gBAAgB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;gBACpD,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBACvC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC;YAED,sBAAW,QAAQ,GAAG,EAAE,EAAC;YACzB,oBAAW,MAAM,GAAG,EAAE,EAAC;YACvB,mBAAW,KAAK,GAAG,IAAI,GAAG,EAAE,EAAC;YAC7B,0BAAW,YAAY,GAAG,IAAI,GAAG,EAAE,EAAC;YA2CnC,CAAC;YAwCD,CAAC;YAkBD,CAAC;YAUD,CAAC;QAmyBF,CAAC","sourcesContent":["import * as _ from 'underscore';\nimport * as crypto from 'crypto';\nimport * as Map from 'es6-map';\nimport * as config from 'config';\nimport * as rp from 'request-promise';\n\nconst APP_SECRET = config.get('APP_SECRET');\n\nconst VALIDATION_TOKEN = config.get('VALIDATION_TOKEN');\n\nconst SERVER_URL = config.get('SERVER_URL');\n\nconst FACEBOOK_GRAPH = config.get('FACEBOOK_GRAPH');\n\nconst PAGE_ACCESS_TOKEN = config.get('PAGE_ACCESS_TOKEN');\n\nexport const limit = 9;\n\nif (!(APP_SECRET && VALIDATION_TOKEN && SERVER_URL)) {\n  console.error(\"Missing config values\");\n  process.exit(1);\n}\n\nexport let listener = {};\nexport let buffer = {};\nexport let rules = new Map();\nexport let payloadRules = new Map();\n\n/*\n * Verify that the callback came from Facebook. Using the App Secret from\n * the App Dashboard, we can verify the signature that is sent with each\n * callback in the x-hub-signature field, located in the header.\n *\n * https://developers.facebook.com/docs/graph-api/webhooks#setup\n *\n */\nexport function verifyRequestSignature(req, res, buf) {\n  let signature = req.headers[\"x-hub-signature\"];\n\n  if (!signature) {\n    // For testing, let's log an error. In production, you should throw an\n    // error.\n    console.error(\"Couldn't validate the signature.\");\n  } else {\n    let elements = signature.split('=');\n    let method = elements[0];\n    let signatureHash = elements[1];\n\n    //console.log(signature);\n\n    let expectedHash = crypto.createHmac('sha1', APP_SECRET)\n      .update(buf)\n      .digest('hex');\n\n    if (signatureHash != expectedHash) {\n      throw new Error(\"Couldn't validate the request signature.\");\n    }\n  }\n}\n\nexport function verifyToken(req, res){\n  if (req.query['hub.mode'] === 'subscribe' && req.query['hub.verify_token'] === VALIDATION_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);\n  }\n\n};\n\nexport function router(req, res) {\n  let data = req.body;\n\n  // Make sure this is a page subscription\n  if (data.object == 'page') {\n    // Iterate over each entry\n    // There may be multiple if batched\n    data.entry.forEach(function (pageEntry) {\n      let pageID = pageEntry.id;\n      let timeOfEvent = pageEntry.time;\n\n      // Iterate over each messaging event\n      pageEntry.messaging.forEach(function (messagingEvent) {\n        //console.log(messagingEvent);\n        if (messagingEvent.optin) {\n          receivedAuthentication(messagingEvent);\n        } else if (messagingEvent.message) {\n          receivedMessage(messagingEvent);\n        } else if (messagingEvent.delivery) {\n          receivedDeliveryConfirmation(messagingEvent);\n        } else if (messagingEvent.postback) {\n          receivedPostback(messagingEvent);\n        } else if (messagingEvent.read) {\n          receivedMessageRead(messagingEvent);\n        } else if (messagingEvent.account_linking) {\n          receivedAccountLink(messagingEvent);\n        } else {\n          console.log(\"Webhook received unknown messagingEvent: \", messagingEvent);\n        }\n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know you've\n    // successfully received the callback. Otherwise, the request will time out.\n    res.sendStatus(200);\n  }\n};\n\nexport function authorize(req, res) {\n  let accountLinkingToken = req.query['account_linking_token'];\n  let redirectURI = req.query['redirect_uri'];\n\n  // Authorization Code should be generated per user by the developer. This will\n  // be passed to the Account Linking callback.\n  let authCode = \"1234567890\";\n\n  // Redirect users to this URI on successful login\n  let redirectURISuccess = redirectURI + \"&authorization_code=\" + authCode;\n\n  res.render('authorize', {\n    accountLinkingToken: accountLinkingToken,\n    redirectURI: redirectURI,\n    redirectURISuccess: redirectURISuccess\n  });\n};\n\nexport function defaultSearch(recipientId, senderId, query){\n  console.log('defaultSearch');\n  //console.log(search);\n  let search = payloadRules.get('Search');\n\n  if(search){\n    search(recipientId, senderId, query);\n  }\n};\n\n/*\n * Turn typing indicator on\n *\n */\nexport function sendTypingOn(recipientId, senderId) {\n  //console.log(\"Turning typing indicator on\");\n\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: \"typing_on\"\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Turn typing indicator off\n *\n */\nexport function sendTypingOff(recipientId, senderId) {\n  //console.log(\"Turning typing indicator off\");\n\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: \"typing_off\"\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a text message using the Send API.\n *\n */\nexport function sendTextMessage(recipientId, senderId,  messageText) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: messageText\n      //metadata: \"DEVELOPER_DEFINED_METADATA\"\n    }\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a Structured Message (Generic Message type) using the Send API.\n *\n */\nexport function sendGenericMessage(recipientId, senderId, elements) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"generic\",\n          elements: elements\n        }\n      }\n    }\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\nexport function clearListener(recipientId){\n  let userListener = listener[recipientId];\n  if(typeof userListener != 'undefined'){\n    listener[recipientId] = {};\n  }\n}\n\n\n\n\n\n/*\n * Authorization Event\n *\n * The value for 'optin.ref' is defined in the entry point. For the \"Send to\n * Messenger\" plugin, it is the 'data-ref' field. Read more at\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/authentication\n *\n */\nfunction receivedAuthentication(event) {\n  let senderID = event.sender.id;\n  let recipientID = event.recipient.id;\n  let timeOfAuth = event.timestamp;\n\n  // The 'ref' field is set in the 'Send to Messenger' plugin, in the 'data-ref'\n  // The developer can set this to an arbitrary value to associate the\n  // authentication callback with the 'Send to Messenger' click event. This is\n  // a way to do account linking when the user clicks the 'Send to Messenger'\n  // plugin.\n\n  senderID = parseInt(senderID);\n  recipientID = parseInt(recipientID);\n  let passThroughParam = event.optin.ref;\n\n  console.log(\"Received authentication for user %d and page %d with pass \" +\n    \"through param '%s' at %d\", senderID, recipientID, passThroughParam,\n    timeOfAuth);\n\n  // When an authentication is received, we'll send a message back to the sender\n  // to let them know it was successful.\n  sendTextMessage(senderID, recipientID, \"Authentication successful\");\n}\n\n/*\n * Message Event\n *\n * This event is called when a message is sent to your page. The 'message'\n * object format can lety depending on the kind of message that was received.\n * Read more at https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-received\n *\n * For this example, we're going to echo any text that we get. If we get some\n * special keywords ('button', 'generic', 'receipt'), then we'll send back\n * examples of those bubbles to illustrate the special message bubbles we've\n * created. If we receive a message with an attachment (image, video, audio),\n * then we'll simply confirm that we've received the attachment.\n *\n */\nfunction receivedMessage(event) {\n  let senderID = event.sender.id;\n  let recipientID = event.recipient.id;\n  let timeOfMessage = event.timestamp;\n  let message = event.message;\n\n  //console.log(\"Received message for user %d and page %d at %d with message:\", senderID, recipientID, timeOfMessage);\n  //console.log(JSON.stringify(message));\n\n  let isEcho = message.is_echo;\n  let messageId = message.mid;\n  let appId = message.app_id;\n  let metadata = message.metadata;\n\n  // You may get a text or attachment but not both\n  let messageText = message.text;\n  let messageAttachments = message.attachments;\n  let quickReply = message.quick_reply;\n\n  senderID = parseInt(senderID);\n  recipientID = parseInt(recipientID);\n\n  if (isEcho) {\n    // Just logging message echoes to console\n    console.log(\"Received echo for message %s and app %d with metadata %s\",\n      messageId, appId, metadata);\n    return;\n  }\n  else if (quickReply) {\n    let quickReplyPayload = quickReply.payload;\n    //console.log(\"Quick reply for message %s with payload %s\", messageId, quickReplyPayload);\n    let payloadFunction;\n\n    if(quickReplyPayload.includes('-')){\n      let params = quickReplyPayload.split('-');\n      payloadFunction = payloadRules.get(params[0]);\n      //console.log(senderID);\n      //console.log(typeof senderID);\n      if(typeof payloadFunction == 'function'){\n        if(params.length == 4) {\n          payloadFunction(senderID, recipientID, params[1], params[2], params[3]);\n        }\n        else if(params.length == 3) {\n          payloadFunction(senderID, recipientID, params[1], params[2]);\n        }\n        else{\n          payloadFunction(senderID, recipientID, params[1]);\n        }\n      }\n    }else{\n      payloadFunction = payloadRules.get(quickReplyPayload)\n\n      if(payloadFunction){\n        payloadFunction(senderID, recipientID);\n      }\n    }\n  }\n  else if (messageText) {\n    let userListeners = listener[senderID];\n    let existRule = false;\n    let ruleFunction = undefined;\n\n    messageText = messageText.toLowerCase()\n\n    rules.forEach(function (func, key){\n      if(messageText.includes(key)){\n        ruleFunction =  func;\n        existRule = true;\n      }\n    });\n\n    if(existRule){\n      ruleFunction(senderID, recipientID);\n    }else{\n      if(!_.isEmpty(userListeners)){\n        if(!buffer[senderID]){\n          buffer[senderID] = {}\n        }\n        let keys = Object.keys(userListeners);\n        let key = keys.shift();\n\n        while(key){\n          if(userListeners[key].type == 'text'){\n            buffer[senderID][key] = messageText;\n            userListeners[key].callback(senderID, recipientID);\n            existRule = true;\n          }\n          delete userListeners[key];\n          key = keys.shift();\n        }\n      }\n      else{\n        defaultSearch(senderID, recipientID, messageText);\n      }\n    }\n  }\n  else if (messageAttachments) {\n    if(messageAttachments[0].type == 'location'){\n      let location = messageAttachments[0].payload.coordinates;\n      let userListeners = listener[senderID];\n      //console.log(senderID);\n      //console.log(typeof senderID);\n      if(!_.isEmpty(userListeners)){\n        if(!buffer[senderID]){\n          buffer[senderID] = {}\n        }\n        let keys = Object.keys(userListeners);\n        let key = keys.shift();\n\n        while(key){\n          //console.log(key);\n          if(userListeners[key].type == 'attachment'){\n            buffer[senderID][key] = {lat: location.lat, lng: location.long};\n            userListeners[key].callback(senderID, recipientID);\n          }\n          delete userListeners[key]\n          key = keys.shift();\n        }\n      }\n    }\n    //sendTextMessage(senderID, \"Message with attachment received\");\n  }\n\n}\n\n/*\n * Delivery Confirmation Event\n *\n * This event is sent to confirm the delivery of a message. Read more about\n * these fields at https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-delivered\n *\n */\nfunction receivedDeliveryConfirmation(event) {\n  let senderID = event.sender.id;\n  let recipientID = event.recipient.id;\n  let delivery = event.delivery;\n  let messageIDs = delivery.mids;\n  let watermark = delivery.watermark;\n  let sequenceNumber = delivery.seq;\n\n  senderID = parseInt(senderID);\n  recipientID = parseInt(recipientID);\n\n  if (messageIDs) {\n    messageIDs.forEach(function(messageID) {\n      //console.log(\"Received delivery confirmation for message ID: %s\", messageID);\n    });\n  }\n\n  //console.log(\"All message before %d were delivered.\", watermark);\n}\n\n/*\n * Postback Event\n *\n * This event is called when a postback is tapped on a Structured Message.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/postback-received\n *\n */\nfunction receivedPostback(event) {\n  let senderID = event.sender.id;\n  let recipientID = event.recipient.id;\n  let timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback\n  // button for Structured Messages.\n  let payload = event.postback.payload;\n\n  //console.log(\"Received postback for user %d and page %d with payload '%s' \" + \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to\n  // let them know it was successful\n\n  let payloadFunction;\n\n  let params = payload.split('-');\n\n  payloadFunction = payloadRules.get(params[0]);\n  senderID = parseInt(senderID);\n  recipientID = parseInt(recipientID);\n\n  //console.log(senderID);\n  //console.log(typeof senderID);\n\n  if(payloadFunction){\n    switch (params.length){\n      case 1:\n        payloadFunction(senderID, recipientID);\n        break;\n      case 2:\n        payloadFunction(senderID, recipientID, params[1]);\n        break;\n      case 3:\n        payloadFunction(senderID, recipientID, params[1], params[2]);\n        break;\n      default:\n        console.log('Payload not found: '+params)\n    }\n  }\n\n  /*\n   if(payload == 'Greeting'){\n   sendMenuMessage(senderID);\n   }\n   else if(payload == 'Delivery'){\n   sendMenuMessage(senderID);\n   }\n   else if(payload.startsWith(\"ListCategories\")){\n   let params = payload.split(\"-\");\n   console.log(\"List Categories\");\n   console.log(params);\n   listCategories(senderID, parseInt(params[1]));\n   }\n   else if(payload.startsWith(\"ListProducts\")){\n   let params = payload.split(\"-\");\n   listProducts(senderID, params[1], parseInt(params[2]));\n   }\n   else if(payload.startsWith(\"Add\")){\n   let params = payload.split(\"-\");\n   addProduct(params[1]);\n   }\n   else if(payload.startsWith(\"ShoppingCart\")){\n   sendBillMessage(senderID);\n   }\n   else{\n   sendTextMessage(senderID, \"Postback called \"+payload);\n   }\n   */\n}\n\n/*\n * Message Read Event\n *\n * This event is called when a previously-sent message has been read.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-read\n *\n */\nfunction receivedMessageRead(event) {\n  let senderID = event.sender.id;\n  let recipientID = event.recipient.id;\n\n  // All messages before watermark (a timestamp) or sequence have been seen.\n  let watermark = event.read.watermark;\n  let sequenceNumber = event.read.seq;\n\n  senderID = parseInt(senderID);\n  recipientID = parseInt(recipientID);\n\n  console.log(\"Received message read event for watermark %d and sequence \" +\n    \"number %d\", watermark, sequenceNumber);\n}\n\n/*\n * Account Link Event\n *\n * This event is called when the Link Account or UnLink Account action has been\n * tapped.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/account-linking\n *\n */\nfunction receivedAccountLink(event) {\n  let senderID = event.sender.id;\n  let recipientID = event.recipient.id;\n\n  let status = event.account_linking.status;\n  let authCode = event.account_linking.authorization_code;\n\n  senderID = parseInt(senderID);\n  recipientID = parseInt(recipientID);\n\n  console.log(\"Received account link event with for user %d with status %s \" +\n    \"and auth code %s \", senderID, status, authCode);\n}\n\n/*\n * Call the Send API. The message data goes in the body. If successful, we'll\n * get the message id in a response\n *\n */\nfunction callSendAPI(messageData, senderId) {\n    if(typeof PAGE_ACCESS_TOKEN != 'undefined'){\n      return rp({\n        uri: FACEBOOK_GRAPH + 'me/messages',\n        qs: {access_token: PAGE_ACCESS_TOKEN},\n        method: 'POST',\n        json: messageData\n      }).catch(error => {\n        console.log('error');\n        console.log(error);\n      });\n    }\n    else {\n      console.log('Error: senderId not found: ' + senderId)\n      console.log(messageData);\n    }\n}\n\nfunction testAPI(senderId){\n    return rp({\n      uri: FACEBOOK_GRAPH + 'me?fields=name,email,age_range,birthday,is_verified,location',\n      qs: {access_token: PAGE_ACCESS_TOKEN},\n      method: 'GET'\n    }).then(response => {\n      console.log('Successful login for: ' + response.name);\n      console.log('Thanks for logging in, ' + response.email + '!');\n      console.log(response);\n    }).catch(error => {\n      console.log('error');\n      console.log(error);\n    });\n}\n\n/*\n * Send an image using the Send API.\n *\n */\nexport function sendImageMessage(recipientId, senderId, imageUrl) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"image\",\n        payload: {\n          url: imageUrl\n        }\n      }\n    }\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a Gif using the Send API.\n *\n */\nfunction sendGifMessage(recipientId, senderId, gifUrl) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"image\",\n        payload: {\n          url: SERVER_URL + gifUrl\n        }\n      }\n    }\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send audio using the Send API.\n *\n */\nfunction sendAudioMessage(recipientId, senderId, audioUrl) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"audio\",\n        payload: {\n          url: SERVER_URL + audioUrl\n        }\n      }\n    }\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a video using the Send API.\n *\n */\nfunction sendVideoMessage(recipientId, senderId, videoUrl) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"video\",\n        payload: {\n          url: SERVER_URL + videoUrl\n        }\n      }\n    }\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a video using the Send API.\n *\n */\nfunction sendFileMessage(recipientId, senderId, fileUrl) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"file\",\n        payload: {\n          url: SERVER_URL + fileUrl\n        }\n      }\n    }\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a button message using the Send API.\n *\n */\nfunction sendButtonMessage(recipientId, senderId, text, buttons) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"button\",\n          text: text,\n          buttons: buttons\n        }\n      }\n    }\n  };\n\n  /*\n   {\n   type: \"web_url\",\n   url: \"https://www.oculus.com/en-us/rift/\",\n   title: \"Open Web URL\"\n   }, {\n   type: \"postback\",\n   title: \"Trigger Postback\",\n   payload: \"DEVELOPED_DEFINED_PAYLOAD\"\n   }, {\n   type: \"phone_number\",\n   title: \"Call Phone Number\",\n   payload: \"+16505551234\"\n   }\n\n   * */\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a receipt message using the Send API.\n *\n */\nexport function sendReceiptMessage(recipientId, senderId, payload, quick_replies) {\n  // Generate a random receipt ID as the API requires a unique ID\n  let receiptId = \"order\" + Math.floor(Math.random()*1000);\n\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message:{\n      attachment: {\n        type: \"template\",\n        payload: payload\n      },\n      quick_replies: quick_replies\n    }\n  };\n  /*\n   * {\n   template_type: \"receipt\",\n   recipient_name: \"Peter Chang\",\n   order_number: receiptId,\n   currency: \"COP\",\n   payment_method: \"Visa 1234\",\n   timestamp: \"1428444852\",\n   elements: [{\n   title: \"Oculus Rift\",\n   subtitle: \"Includes: headset, sensor, remote\",\n   quantity: 1,\n   price: 599.00,\n   currency: \"USD\",\n   image_url: SERVER_URL + \"/assets/riftsq.png\"\n   }, {\n   title: \"Samsung Gear VR\",\n   subtitle: \"Frost White\",\n   quantity: 1,\n   price: 99.99,\n   currency: \"USD\",\n   image_url: SERVER_URL + \"/assets/gearvrsq.png\"\n   }],\n   address: {\n   street_1: \"1 Hacker Way\",\n   street_2: \"\",\n   city: \"Menlo Park\",\n   postal_code: \"94025\",\n   state: \"CA\",\n   country: \"US\"\n   },\n   summary: {\n   subtotal: 698.99,\n   shipping_cost: 20.00,\n   total_tax: 57.67,\n   total_cost: 626.66\n   },\n   adjustments: [{\n   name: \"New Customer Discount\",\n   amount: -50\n   }, {\n   name: \"$100 Off Coupon\",\n   amount: -100\n   }]\n   }\n   *\n   * */\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a message with Quick Reply buttons.\n *\n */\nexport function sendQuickReplyMessage(recipientId, senderId, text, quick_replies) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: text,\n      //metadata: \"DEVELOPER_DEFINED_METADATA\",\n      quick_replies: quick_replies\n    }\n  };\n\n  /*\n\n   [\n   {\n   \"content_type\":\"text\",\n   \"title\":\"Action\",\n   \"payload\":\"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_ACTION\"\n   },\n   {\n   \"content_type\":\"text\",\n   \"title\":\"Comedy\",\n   \"payload\":\"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_COMEDY\"\n   },\n   {\n   \"content_type\":\"text\",\n   \"title\":\"Drama\",\n   \"payload\":\"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_DRAMA\"\n   }\n   ]\n\n   * */\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a read receipt to indicate the message has been read\n *\n */\nfunction sendReadReceipt(recipientId, senderId) {\n  console.log(\"Sending a read receipt to mark message as seen\");\n\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: \"mark_seen\"\n  };\n\n  return callSendAPI(messageData, senderId);\n}\n\n/*\n * Send a message with the account linking call-to-action\n *\n */\nfunction sendAccountLinking(recipientId, senderId, payload) {\n  let messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: payload\n      }\n    }\n  };\n\n  /*\n\n   {\n   template_type: \"button\",\n   text: \"Welcome. Link your account.\",\n   buttons:[{\n   type: \"account_link\",\n   url: SERVER_URL + \"/authorize\"\n   }]\n   }\n\n   * */\n\n  return callSendAPI(messageData, senderId);\n}\n\nfunction findKeyStartsWith(map, str){\n  for (let [key, value] of map) {\n    if(key.startsWith(str))\n      return value;\n  }\n  return undefined;\n}\n\nexport function setListener(recipientId, dataId, type, callback){\n  if(typeof listener[recipientId] == 'undefined'){\n    listener[recipientId] = {};\n  }\n\n  listener[recipientId][dataId] = {callback: callback, type: type};\n}\n\nfunction getListener(recipientId, dataId){\n  if(typeof listener[recipientId] == 'undefined'){\n    return undefined\n  }\n\n  return listener[recipientId][dataId];\n}\n\nfunction deleteListener(recipientId, dataId){\n  if(!listener[recipientId]){\n    return false\n  }\n\n  delete listener[recipientId][dataId];\n  return true\n\n}\n\nexport function setDataBuffer(recipientId, key, value){\n  if(!buffer[recipientId]){\n    buffer[recipientId] = {}\n  }\n  buffer[recipientId][key] = value;\n}\n\n\n\n\n\n"]}